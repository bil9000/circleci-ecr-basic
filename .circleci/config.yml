version: 2.1

orbs: 
  aws-cli: circleci/aws-cli@3.1.1

jobs:


#  aws-cli-example:
#    executor: aws-cli/default
#    steps:
#      - checkout
#      - aws-cli/setup:
#          profile-name: example
#      - run: aws s3 ls


  multi-arch-build:
    docker:
      - image: cimg/python:3.8.2
    environment:
      AWS_DEFAULT_OUTPUT: json
    resource_class: arm.large
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: workspace
      - restore_cache:
          key: v1-{{ checksum "requirements.txt" }}
      - run:
          name: Install awscli
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: v1-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: Setup common environment variables
          command: |
            echo 'export ECR_REPOSITORY_NAME="${AWS_RESOURCE_NAME_PREFIX}"' >> $BASH_ENV
            echo 'export FULL_IMAGE_NAME="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPOSITORY_NAME}:${CIRCLE_SHA1}"' >> $BASH_ENV
            echo 'export ECR_REPOSITORY_NAME="${AWS_RESOURCE_NAME_PREFIX}"' >> $BASH_ENV
            echo 'export ECS_CLUSTER_NAME="${AWS_RESOURCE_NAME_PREFIX}-cluster"' >> $BASH_ENV
            echo 'export ECS_SERVICE_NAME="${AWS_RESOURCE_NAME_PREFIX}-service"' >> $BASH_ENV
            aws ec2 describe-regions
      - deploy:
          name: "Upload container to registry"
          command: |
            export DOCKER_CLI_EXPERIMENTAL=enabled
            docker context create multi-arch-build
            docker buildx create --use multi-arch-build --platform linux/arm64/v8,linux/amd64
            eval $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
            docker buildx build --push --platform linux/arm64/v8,linux/amd64 $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY_NAME:$CIRCLE_SHA1 --t $CRICLE_SHA1

workflows:
  version: 2
  deploy:
    jobs:
#      - aws-cli-example
      - multi-arch-build
#      - upload-manifest:
#          requires:
#            - build-arm
#            - build-x86
